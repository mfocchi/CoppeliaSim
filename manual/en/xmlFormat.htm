<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>XML formats</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>XML formats</h1>

<p>CoppeliaSim supports two different XML formats, where each follow a different goal:</p>
<li>an <strong>exhaustive format</strong>: the exhaustive format is a  lossless format, which means that all scene or model information will be same between a save and load operation. The drawback is however that the file should not be manually modified, since the risk of corrupting it is high. This format is ideal for version control for example.</li>
<li>a <strong>simple format</strong>: the simple format is a  lossy format, which means that not all information contained in a scene or model will be saved, only a subset of it. The advantage is however that it can be manually created and/or modified. This format is ideal for creating initial models, or for creating CoppeliaSim exporters in different applications.</li>
<p>Both formats have two variables (defined in file <em>system/usrset.txt</em>) allowing to control the output XML file:</p>
<li><em><strong>xmlExportSplitSize</strong></em>: represents the subset data size threshold where data will be referenced and written to a separate file. Set to 0 if you wish to create a single file.</li>
<li><em><strong>xmlExportKnownFormats</strong></em>: if <em>true</em>, and the export generates several files, then the <em>png</em> format for images, and the <em>dae</em> format for meshs are used. The <em>dae</em> format is however only supported with the simple xml format.</li>

<p>The exhaustive format will not be discussed further here. Refer to the generated files for additional information.</p>

<h2>
<a name="simpleFormat"></a>Simple XML format
</h2>

<p>The simple format, however its name, can contain quite complex information. Each piece of information is wrapped as <em>element</em> inside of a start- and end-<em>tag</em>. Most tags are optional (if not specified, then default values will be used). The simplest to get a good understanding of such a file's organization and which tags are not optional is to first export a scene, then examine/modify the generated file.</p>
<p>Following gives a brief overview, based on simple examples. First, a scene containing a camera attached to a dummy. Required items are indicated in red:</p>

<pre class=lightGreyBox><font color="red">&lt;CoppeliaSim&gt;</font>
  <font color="red">&lt;filetype&gt;simpleScene&lt;/filetype&gt;</font> <font color="green">(Should be simpleScene or simpleModel)</font>
  <font color="red">&lt;xmlSerializationNb&gt;1&lt;/xmlSerializationNb&gt;</font>
  &lt;environment&gt;<font color="green"> (ignored when loading a model)</font>
    ... <font color="green">(refer to generated files for details)</font>
  &lt;/environment&gt;<br>  &lt;settings&gt;<font color="green"> (ignored when loading a model)</font><br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/settings&gt;<br>  &lt;dynamics&gt;<font color="green"> (ignored when loading a model)</font><br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/dynamics&gt;<br>  &lt;simulation&gt;<font color="green"> (ignored when loading a model)</font><br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/simulation&gt;
  &lt;dummy&gt;<br>    ... <font color="green">(refer to generated files for details)</font>
    &lt;camera&gt;<br>      ... <font color="green">(refer to generated files for details)</font>
    &lt;/camera&gt;<br>  &lt;/dummy&gt;<br><font color="red">&lt;/CoppeliaSim&gt;</font>
</pre>

<p>It is a good idea to specify a few more tags for a scene object, such as the object alias, its position/orientation relative to its parent object:</p>

<pre class=lightGreyBox>
...<br>&lt;camera&gt;<br>  &lt;common&gt;<br>    &lt;alias&gt;DefaultCamera&lt;/alias&gt;<br>    &lt;localFrame&gt;<br>      &lt;position&gt;1.120530 -1.899800 1.079718&lt;/position&gt;<br>      &lt;euler&gt;-110.932999 -28.703005 169.590027&lt;/euler&gt;<br>    &lt;/localFrame&gt;<br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/common&gt;<br>  ... <font color="green">(refer to generated files for details)</font>
&lt;/camera&gt;<br>...</pre>

<p>Shapes require a bit more explanations. Here a <strong>primitive cuboid</strong> shape:</p>
<pre class=lightGreyBox>
&lt;shape&gt;<br>  &lt;common&gt;<br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/common&gt;<br>  <font color="red">&lt;primitive&gt;</font> <font color="green">(should be compound, primitive, heightfield or mesh)</font><br>    <font color="red">&lt;type&gt;cuboid&lt;/type&gt;</font> <font color="green">(should be cuboid, sphere, cylinder, cone, plane or disc)</font><br>    &lt;size&gt;0.100000 0.100000 0.100000&lt;/size&gt;
    &lt;localFrame&gt; <font color="green">(this is in addition to the local frame you may specify in &lt;common&gt;)</font><br>      &lt;position&gt;0.000000 0.000000 0.000000&lt;/position&gt;<br>      &lt;euler&gt;-0.000000 0.000000 -0.000000&lt;/euler&gt;<br>    &lt;/localFrame&gt;
    ... <font color="green">(refer to generated files for details)</font>
  <font color="red">&lt;/primitive&gt;</font><br>  &lt;dynamics&gt;<br>    ... <font color="green">(see further below for details)</font>
  &lt;/dynamics&gt;<br>&lt;/shape&gt;</pre>

<p>Here a <strong>mesh</strong>, referencing an external file:</p>
<pre class=lightGreyBox>
&lt;shape&gt;<br>  &lt;common&gt;<br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/common&gt;<br>  <font color="red">&lt;mesh&gt;</font> <font color="green">(should be compound, primitive, heightfield or mesh)</font><br>    <font color="red">&lt;fileName&gt;test.simscene_mesh_Cuboid0.dae&lt;/fileName&gt;</font> <font color="green">(or vertices and indices)</font>
    &lt;localFrame&gt; <font color="green">(this is in addition to the local frame you may specify in &lt;common&gt;)</font><br>      &lt;position&gt;0.000000 0.000000 0.000000&lt;/position&gt;<br>      &lt;euler&gt;-0.000000 0.000000 -0.000000&lt;/euler&gt;<br>    &lt;/localFrame&gt;
    ... <font color="green">(refer to generated files for details)</font>
  <font color="red">&lt;/mesh&gt;</font><br>  &lt;dynamics&gt;<br>    ... <font color="green">(see further below for details)</font>
  &lt;/dynamics&gt;<br>&lt;/shape&gt;</pre>




<p>Here a <strong>mesh</strong>, with inlined mesh data:</p>
<pre class=lightGreyBox>
&lt;shape&gt;<br>  &lt;common&gt;<br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/common&gt;<br>  <font color="red">&lt;mesh&gt;</font> <font color="green">(should be compound, primitive, heightfield or mesh)</font>
    <font color="red">&lt;vertices&gt;0.05 -0.05 -0.05 -0.05 -0.05 -0.05 0.05 0.05 -0.05 -0.05 ...&lt;/vertices&gt;</font>
    <font color="red">&lt;indices&gt;0 1 2 2 1 3 1 0 4 1 4 5 2 3 6 6 3 7 6 7 4 4 7 5 3 1 7 7 1 5 0 2 6 0 6 4&lt;/indices&gt;</font>
    &lt;localFrame&gt; <font color="green">(this is in addition to the local frame you may specify in &lt;common&gt;)</font><br>      &lt;position&gt;0.000000 0.000000 0.000000&lt;/position&gt;<br>      &lt;euler&gt;-0.000000 0.000000 -0.000000&lt;/euler&gt;<br>    &lt;/localFrame&gt;
    ... <font color="green">(refer to generated files for details)</font>
  <font color="red">&lt;/mesh&gt;</font><br>  &lt;dynamics&gt;<br>    ... <font color="green">(see further below for details)</font>
  &lt;/dynamics&gt;<br>&lt;/shape&gt;</pre>




<p>Here a <strong>heightfield</strong>:</p>
<pre class=lightGreyBox>
&lt;shape&gt;<br>  &lt;common&gt;<br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/common&gt;<br>  <font color="red">&lt;heightfield&gt;</font> <font color="green">(should be compound, primitive, heightfield or mesh)</font>
    <font color="red">&lt;size&gt;4 3&lt;/size&gt;</font>
    <font color="red">&lt;data&gt;0.2 0.2 0.2 0.2 0.1 0.0 0.0 0.1 0.1 0.1 0.0 0.2&lt;/data&gt;</font>
    &lt;gridStep&gt;3.333333&lt;/gridStep&gt;
    &lt;localFrame&gt; <font color="green">(this is in addition to the local frame you may specify in &lt;common&gt;)</font><br>      &lt;position&gt;0.000000 0.000000 0.000000&lt;/position&gt;<br>      &lt;euler&gt;-0.000000 0.000000 -0.000000&lt;/euler&gt;<br>    &lt;/localFrame&gt;
    ... <font color="green">(refer to generated files for details)</font>
  <font color="red">&lt;/heightfield&gt;</font><br>  &lt;dynamics&gt;<br>    ... <font color="green">(see further below for details)</font>
  &lt;/dynamics&gt;<br>&lt;/shape&gt;</pre>




<p>And here a <strong>compound</strong>:</p>
<pre class=lightGreyBox>
&lt;shape&gt;<br>  &lt;common&gt;<br>    ... <font color="green">(refer to generated files for details)</font>
  &lt;/common&gt;<br>  <font color="red">&lt;compound&gt;</font> <font color="green">(should contain at least 2 of any of compound, primitive or mesh)</font>
    <font color="red">&lt;primitive&gt;</font><br>      ...<br>    <font color="red">&lt;/primitive&gt;</font><br>    <font color="red">&lt;primitive&gt;</font><br>      ...<br>    <font color="red">&lt;/primitive&gt;</font><br>    <font color="red">&lt;compound&gt;</font><br>      ...<br>    <font color="red">&lt;/compound&gt;</font><br>    ...<br>  <font color="red">&lt;/compound&gt;</font><br>  &lt;dynamics&gt;<br>    ... <font color="green">(see further below for details)</font>
  &lt;/dynamics&gt;<br>&lt;/shape&gt;</pre>




<p>If a shape has dynamic properties, you should also fill-in the dynamics tags, as in following example:</p>
<pre class=lightGreyBox>
&lt;shape&gt;<br>  ...<br>  &lt;dynamics&gt;<br>    &lt;respondableMask&gt;65535&lt;/respondableMask&gt;<br>    &lt;mass&gt;1.0&lt;/mass&gt;<br>    &lt;localInertiaFrame&gt;<br>      &lt;position&gt;0.0 0.0 0.0&lt;/position&gt;<br>      &lt;euler&gt;0.0 0.0 0.0&lt;/euler&gt;<br>    &lt;/localInertiaFrame&gt;<br>    &lt;principalMomentOfInertia&gt;0.001667 0.001667 0.001667&lt;/principalMomentOfInertia&gt;<br>    &lt;switches&gt;<br>      &lt;static&gt;false&lt;/static&gt;<br>      &lt;respondable&gt;true&lt;/respondable&gt;<br>      ... <font color="green">(refer to generated files for details)</font><br>    &lt;/switches&gt;<br>    &lt;material&gt;<br>      &lt;engines&gt;<br>        &lt;bullet&gt;<br>          &lt;friction&gt;0.5&lt;/friction&gt;<br>          &lt;oldfriction&gt;1.0&lt;/oldfriction&gt;<br>          ... <font color="green">(refer to generated files for details)</font><br>        &lt;/bullet&gt;<br>        &lt;ode&gt;<br>          &lt;friction&gt;1.0&lt;/friction&gt;<br>            ... <font color="green">(refer to generated files for details)</font><br>        &lt;/ode&gt;<br>        &lt;vortex&gt;<br>          &lt;primlinearaxisfriction&gt;1.0&lt;/primlinearaxisfriction&gt;<br>          &lt;seclinearaxisfriction&gt;1.0&lt;/seclinearaxisfriction&gt;<br>          ... <font color="green">(refer to generated files for details)</font><br>        &lt;/vortex&gt;<br>        &lt;newton&gt;<br>          &lt;staticfriction&gt;1.0&lt;/staticfriction&gt;<br>          &lt;kineticfriction&gt;1.0&lt;/kineticfriction&gt;<br>          ... <font color="green">(refer to generated files for details)</font><br>        &lt;/newton&gt;<br>      &lt;/engines&gt;<br>    &lt;/material&gt;<br>  &lt;/dynamics&gt;<br>&lt;/shape&gt;</pre>




<p>Here a revolute joint, in kinematic mode:</p>
<pre class=lightGreyBox>&lt;joint&gt;<br>  &lt;common&gt;<br>    ... <font color="green">(refer to generated files for details)</font><br>  &lt;/common&gt;<br>  &lt;type&gt;revolute&lt;/type&gt; <font color="green">(can be revolute, prismatic or spherical)</font><br>  &lt;mode&gt;kinematic&lt;/mode&gt; <font color="green">(can be kinematic, dependent or dynamic)</font><br>  &lt;minPosition&gt;-180.0&lt;/minPosition&gt;<br>  &lt;range&gt;360.0&lt;/range&gt;<br>  &lt;position&gt;0.0&lt;/position&gt;<br>  &lt;switches&gt;<br>    &lt;cyclic&gt;true&lt;/cyclic&gt;<br>  &lt;/switches&gt;<br>  ... <font color="green">(refer to generated files for details)</font><br>&lt;/joint&gt;</pre>




<p>Here a revolute joint, in dynamic mode, motor disabled:</p>
<pre class=lightGreyBox>&lt;joint&gt;<br>  &lt;common&gt;<br>    ... <font color="green">(refer to generated files for details)</font><br>  &lt;/common&gt;<br>  &lt;type&gt;revolute&lt;/type&gt; <font color="green">(can be revolute, prismatic or spherical)</font><br>  &lt;mode&gt;dynamic&lt;/mode&gt; <font color="green">(can be kinematic, dependent or dynamic)</font><br>  &lt;minPosition&gt;-180.0&lt;/minPosition&gt;<br>  &lt;range&gt;360.0&lt;/range&gt;<br>  &lt;position&gt;0.0&lt;/position&gt;<br>  &lt;switches&gt;<br>    &lt;cyclic&gt;true&lt;/cyclic&gt;<br>  &lt;/switches&gt;
  &lt;dynamics&gt;<br>    &lt;maxForce&gt;2.5&lt;/maxForce&gt;<br>    &lt;ctrlMode&gt;4&lt;/ctrlMode&gt;<br>    ... <font color="green">(refer to generated files for details)</font><br>    &lt;engines&gt;<br>      ... <font color="green">(refer to generated files for details)</font><br>    &lt;/engines&gt;<br>  &lt;/dynamics&gt;<br>&lt;/joint&gt;</pre>




<p>Here a revolute joint, in dynamic mode, position controlled:</p>
<pre class=lightGreyBox>&lt;joint&gt;<br>  &lt;common&gt;<br>    ... <font color="green">(refer to generated files for details)</font><br>  &lt;/common&gt;<br>  &lt;type&gt;revolute&lt;/type&gt; <font color="green">(can be revolute, prismatic or spherical)</font><br>  &lt;mode&gt;dynamic&lt;/mode&gt; <font color="green">(can be kinematic, dependent or dynamic)</font><br>  &lt;minPosition&gt;-180.0&lt;/minPosition&gt;<br>  &lt;range&gt;360.0&lt;/range&gt;<br>  &lt;position&gt;0.0&lt;/position&gt;<br>  &lt;switches&gt;<br>    &lt;cyclic&gt;true&lt;/cyclic&gt;<br>  &lt;/switches&gt;
  &lt;dynamics&gt;<br>    &lt;maxForce&gt;2.5&lt;/maxForce&gt;<br>    &lt;ctrlMode&gt;4&lt;/ctrlMode&gt;<br>    &lt;upperVelocityLimit&gt;180&lt;/upperVelocityLimit&gt;<br>    &lt;targetPosition&gt;0.0&lt;/targetPosition&gt;<br>    ... <font color="green">(refer to generated files for details)</font><br>    &lt;engines&gt;<br>      ... <font color="green">(refer to generated files for details)</font><br>    &lt;/engines&gt;<br>  &lt;/dynamics&gt;<br>&lt;/joint&gt;</pre>


<p>Other scene objects are not discussed here. For details, export a scene containing such object, then examine the generated file.</p>


<br>
<br>
 </tr>
 <tr>
   <td > 
 </tr>
</table> 
</div>  
  
  
</body>

</html>
